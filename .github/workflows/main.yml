name: Deploy React Application

on:
    push:
      branches:
        - main # Trigger workflow on push to the 'main' branch
    pull_request:
      branches:
        - main # Trigger workflow on pull request to the 'main' branch
 
jobs:
    build:
      runs-on: ubuntu-latest # Specify that the job should run on a GitHub-hosted runner (use self-hosted if needed)
  
      steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v2
  
      # Step 2: Login into Docker Hub
      - name: Login into Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
  
      # Step 3: Build Docker Image
      - name: Docker image build
        run: docker build -t gaman5575/react-frontend --build-arg REACT_APP_NODE_ENV='production' --build-arg REACT_APP_SERVER_BASE_URL='${{ secrets.REACT_APP_SERVER_BASE_URL }}' .
  
      # Step 4: Push Docker Image to Docker Hub
      - name: Pushing to Docker Hub Repo
        run: docker push gaman5575/react-frontend:latest 
  
    Deploy:
      needs: build
      runs-on: self-hosted # Specify that the job runs on a self-hosted runner
  
      steps:
      # Step 5: Pull the latest Docker image from Docker Hub
      - name: Pull latest image from Docker Hub
        run: docker pull gaman5575/react-frontend:latest
  
      # Step 6: Stop and Delete Old container if any present
      - name: Stop and Delete Old container
        run: |
          docker rm -f react-frontend || echo "No existing container to remove"
  
      # Step 7: Run Docker container
      - name: Run Docker container
        run: docker run -d -p 3000:80 --name react-frontend  gaman5575/react-frontend